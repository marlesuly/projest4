import java.util.Arrays;

interface SortStrategy {
    void sort(int[] data);
}

class BubbleSort implements SortStrategy {
    @Override
    public void sort(int[] data) {
        int n = data.length;
        for (int i = 0; i < n-1; i++) {
            for (int j = 0; j < n-i-1; j++) {
                if (data[j] > data[j+1]) {
                    int temp = data[j];
                    data[j] = data[j+1];
                    data[j+1] = temp;
                }
            }
        }
    }
}

class SortContext {
    private SortStrategy strategy;

    public SortContext(SortStrategy strategy) {
        this.strategy = strategy;
    }

    public void setStrategy(SortStrategy strategy) {
        this.strategy = strategy;
    }

    public void performSort(int[] data) {
        strategy.sort(data);
    }
}

public class Main {
    public static void main(String[] args) {
        int[] data = {64, 34, 25, 12, 22, 11, 90};

        SortStrategy bubbleSort = new BubbleSort();
        SortContext sortContext = new SortContext(bubbleSort);

        System.out.println("Unsorted array: " + Arrays.toString(data));

        sortContext.performSort(data);

        System.out.println("Sorted array using BubbleSort: " + Arrays.toString(data));
    }
}
